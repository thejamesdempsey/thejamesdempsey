/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 */

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }
  &:after {
    clear: both;
  }
}


/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}


@mixin font-size($font-size, $line-height:true){
    font-size: strip-unit($font-size) * 1px;
    font-size: strip-unit($font-size / $base-font-size) * 1rem;
	
    @if $line-height == true{
        line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }
}

/**
 * Media query for easy breakpoint. Use pixel width with or without units
 * and it will convert to em 
 */
@mixin mq( $point, $query1: min, $query2: width, $IE9: false, $query-unit: $browser-context) {
    @if $IE9 == true{
        .lt-ie9 & {
            @content;
        }
        @media screen and (#{$query1}-#{$query2}: strip-unit($point) / strip-unit($query-unit) + em) {
            @content;
        }
    }

    @else {
        @media screen and (#{$query1}-#{$query2}: strip-unit($point) / strip-unit($query-unit) + em) {
            @content;
        }
    }
}